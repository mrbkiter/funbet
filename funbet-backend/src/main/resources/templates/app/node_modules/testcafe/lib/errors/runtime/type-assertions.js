'use strict';

exports.__esModule = true;

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

exports.assertNumber = assertNumber;
exports.assertNonNegativeNumber = assertNonNegativeNumber;
exports.assertBoolean = assertBoolean;
exports.assertStringOrRegExp = assertStringOrRegExp;
exports.assertObject = assertObject;
exports.assertString = assertString;
exports.assertNonNullObject = assertNonNullObject;
exports.assertFunction = assertFunction;
exports.assertFunctionOrString = assertFunctionOrString;
exports.assertFunctionOrStringOrNumber = assertFunctionOrStringOrNumber;

var _lodash = require('lodash');

var _ = require('./');

var _message = require('./message');

var _message2 = _interopRequireDefault(_message);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isNonNegativeNumber(value) {
    return (0, _lodash.isFinite)(value) && value >= 0;
}

function assertNumber(callsiteName, what, value) {
    if (!(0, _lodash.isFinite)(value)) throw new _.APIError(callsiteName, _message2.default.valueIsNotANumber, what, typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value));
}

function assertNonNegativeNumber(callsiteName, what, value) {
    if (!isNonNegativeNumber(value)) {
        var valueType = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);
        var actual = valueType === 'number' ? value : valueType;

        throw new _.APIError(callsiteName, _message2.default.valueIsNotANonNegativeNumber, what, actual);
    }
}

function assertBoolean(callsiteName, what, value) {
    var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);

    if (type !== 'boolean') throw new _.APIError(callsiteName, _message2.default.valueIsNotABoolean, what, type);
}

function assertStringOrRegExp(callsiteName, what, value) {
    var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);

    if (type !== 'string' && !(0, _lodash.isRegExp)(value)) throw new _.APIError(callsiteName, _message2.default.valueIsNotAStringOrRegExp, what, type);
}

function assertObject(callsiteName, what, value) {
    var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);

    if (type !== 'object') throw new _.APIError(callsiteName, _message2.default.valueIsNotAnObject, what, type);
}

function assertString(callsiteName, what, value) {
    var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);

    if (type !== 'string') throw new _.APIError(callsiteName, _message2.default.valueIsNotAString, what, type);
}

function assertNonNullObject(callsiteName, what, value) {
    var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);

    if ((0, _lodash.isNil)(value) || type !== 'object') {
        var actualVal = value === null ? 'null' : type;

        throw new _.APIError(callsiteName, _message2.default.valueIsNotAnObject, what, actualVal);
    }
}

function assertFunction(callsiteName, what, value) {
    var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);

    if (type !== 'function') throw new _.APIError(callsiteName, _message2.default.valueIsNotAFunctionOrString, what, type);
}

function assertFunctionOrString(callsiteName, what, value) {
    var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);

    if (type !== 'string' && type !== 'function') throw new _.APIError(callsiteName, _message2.default.valueIsNotAFunctionOrString, what, type);
}

function assertFunctionOrStringOrNumber(callsiteName, what, value) {
    var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);

    if (type !== 'string' && type !== 'function' && !(0, _lodash.isFinite)(value)) throw new _.APIError(callsiteName, _message2.default.valueIsNotAFunctionOrStringOrNumber, what, type);
}