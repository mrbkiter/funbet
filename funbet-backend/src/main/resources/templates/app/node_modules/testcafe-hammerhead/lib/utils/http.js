'use strict';

exports.__esModule = true;

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

exports.preventCaching = preventCaching;
exports.respond404 = respond404;
exports.respond500 = respond500;
exports.respondWithJSON = respondWithJSON;
exports.respondStatic = respondStatic;
exports.fetchBody = fetchBody;

var _pinkie = require('pinkie');

var _pinkie2 = _interopRequireDefault(_pinkie);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function preventCaching(res) {
    res.setHeader('cache-control', 'no-cache, no-store, must-revalidate');
    res.setHeader('pragma', 'no-cache');
}

function respond404(res) {
    res.statusCode = 404;
    res.end();
}

function respond500(res, err) {
    res.statusCode = 500;
    res.end(err || '');
}

function respondWithJSON(res, data, skipContentType) {
    if (!skipContentType) res.setHeader('content-type', 'application/json');

    // NOTE: GH-105
    preventCaching(res);
    res.end(data ? (0, _stringify2.default)(data) : '');
}

function respondStatic(req, res, resource) {
    if (resource.etag === req.headers['if-none-match']) {
        res.statusCode = 304;
        res.end();
    } else {
        res.setHeader('cache-control', 'max-age=30, must-revalidate');
        res.setHeader('etag', resource.etag);
        res.setHeader('content-type', resource.contentType);
        res.end(resource.content);
    }
}

function fetchBody(r) {
    return new _pinkie2.default(function (resolve) {
        var chunks = [];

        r.on('data', function (chunk) {
            return chunks.push(chunk);
        });
        r.on('end', function () {
            return resolve(Buffer.concat(chunks));
        });
    });
}