'use strict';

exports.__esModule = true;
exports.ie9FileReaderShim = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var ie9FileReaderShim = exports.ie9FileReaderShim = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(req, res) {
        var body, parsedUrl, contentTypeHeader, inputName, filename, info;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        _context.next = 2;
                        return (0, _http.fetchBody)(req);

                    case 2:
                        body = _context.sent;
                        parsedUrl = _url2.default.parse(req.url, true);
                        contentTypeHeader = req.headers['content-type'];
                        inputName = parsedUrl.query['input-name'];
                        filename = parsedUrl.query['filename'];
                        info = getFileInfo(contentTypeHeader, body, inputName, filename);

                        // NOTE: We should skip a content type, because IE9 can't handle content with the "application/json" content type
                        // trying to download it as a file.

                        (0, _http.respondWithJSON)(res, info, true);

                    case 9:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function ie9FileReaderShim(_x, _x2) {
        return _ref.apply(this, arguments);
    };
}();

exports.inject = inject;

var _formData = require('./form-data');

var _formData2 = _interopRequireDefault(_formData);

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

var _http = require('../utils/http');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Utils
function getFileInfo(contentTypeHeader, body, inputName, fileName) {
    var formData = new _formData2.default();

    formData.parseContentTypeHeader(contentTypeHeader);
    formData.parseBody(body);

    var entry = formData.getEntriesByName(inputName)[0];
    var data = Buffer.concat(entry.body);

    fileName = fileName.substr(fileName.lastIndexOf('\\') + 1);

    return {
        data: data.toString('base64'),
        info: {
            type: entry.headers['Content-Type'],
            name: fileName,
            size: data.length
        }
    };
}

// API
function inject(contentTypeHeader, body) {
    var formData = new _formData2.default();

    formData.parseContentTypeHeader(contentTypeHeader);

    if (!formData.boundary) return null;

    formData.parseBody(body);
    formData.expandUploads();

    return formData.toBuffer();
}