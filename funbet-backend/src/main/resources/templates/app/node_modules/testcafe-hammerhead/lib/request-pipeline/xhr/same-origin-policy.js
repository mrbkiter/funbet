'use strict';

exports.__esModule = true;
exports.SAME_ORIGIN_CHECK_FAILED_STATUS_CODE = undefined;
exports.check = check;

var _headers = require('./headers');

var _headers2 = _interopRequireDefault(_headers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SAME_ORIGIN_CHECK_FAILED_STATUS_CODE = exports.SAME_ORIGIN_CHECK_FAILED_STATUS_CODE = 222;

// NOTE: https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS
function check(ctx) {
    var reqOrigin = ctx.dest.reqOrigin;

    // PASSED: Same origin.
    if (ctx.dest.domain === reqOrigin) return true;

    // NOTE: Ok, we have a cross-origin request.
    var corsSupported = !!ctx.req.headers[_headers2.default.corsSupported] || ctx.isFetch;

    // FAILED: CORS not supported (IE9 only).
    if (!corsSupported) return false;

    // PASSED: We have a "preflight" request.
    if (ctx.req.method === 'OPTIONS') return true;

    var withCredentials = !!ctx.req.headers[_headers2.default.withCredentials] || ctx.req.headers[_headers2.default.fetchRequestCredentials] === 'include';
    var allowOriginHeader = ctx.destRes.headers['access-control-allow-origin'];
    var allowCredentialsHeader = ctx.destRes.headers['access-control-allow-credentials'];
    var allowCredentials = String(allowCredentialsHeader).toLowerCase() === 'true';
    var allowedOrigins = Array.isArray(allowOriginHeader) ? allowOriginHeader : [allowOriginHeader];
    var wildcardAllowed = allowedOrigins.indexOf('*') > -1;

    // FAILED: Destination server doesn't provide the Access-Control-Allow-Origin header.
    // So cross-domain requests are denied
    if (!allowOriginHeader) return false;

    // FAILED: Credentialed requests are not allowed or wild carding was used
    // for the allowed origin (credentialed requests should specify the exact domain).
    if (withCredentials && (!allowCredentials || wildcardAllowed)) return false;

    // FINAL CHECK: The request origin should match one of the allowed origins.
    return wildcardAllowed || allowedOrigins.indexOf(reqOrigin) > -1;
}