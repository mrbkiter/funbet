'use strict';

exports.__esModule = true;
exports.isPage = isPage;
exports.isCSSResource = isCSSResource;
exports.isScriptResource = isScriptResource;
exports.isManifest = isManifest;
// Const
var MANIFEST_MIME = 'text/cache-manifest';
var CSS_MIME = 'text/css';

var PAGE_MIMES = ['text/html', 'text/xml', 'application/xhtml+xml', 'application/xml', 'application/x-ms-application'];

var SCRIPT_MIMES = ['application/ecmascript', 'application/javascript', 'application/x-ecmascript', 'application/x-javascript', 'text/ecmascript', 'text/javascript', 'text/javascript1.0', 'text/javascript1.1', 'text/javascript1.2', 'text/javascript1.3', 'text/javascript1.4', 'text/javascript1.5', 'text/jscript', 'text/livescript', 'text/x-ecmascript', 'text/x-javascript'];

// Content type
function isPage(header) {
    header = header.toLowerCase();

    return PAGE_MIMES.some(function (mime) {
        return header.indexOf(mime) > -1;
    });
}

function isCSSResource(contentTypeHeader, acceptHeader) {
    return contentTypeHeader.toLowerCase().indexOf(CSS_MIME) > -1 || acceptHeader.toLowerCase() === CSS_MIME;
}

function isScriptResource(contentTypeHeader, acceptHeader) {
    contentTypeHeader = contentTypeHeader.toLowerCase();
    acceptHeader = acceptHeader.toLowerCase();

    return SCRIPT_MIMES.some(function (mime) {
        return contentTypeHeader.indexOf(mime) > -1;
    }) || SCRIPT_MIMES.indexOf(acceptHeader) > -1;
}

function isManifest(contentTypeHeader) {
    return contentTypeHeader.toLowerCase().indexOf(MANIFEST_MIME) > -1;
}