'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _resourceProcessorBase = require('./resource-processor-base');

var _resourceProcessorBase2 = _interopRequireDefault(_resourceProcessorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ManifestProcessor = function (_ResourceProcessorBas) {
    (0, _inherits3.default)(ManifestProcessor, _ResourceProcessorBas);

    function ManifestProcessor() {
        (0, _classCallCheck3.default)(this, ManifestProcessor);
        return (0, _possibleConstructorReturn3.default)(this, _ResourceProcessorBas.apply(this, arguments));
    }

    ManifestProcessor.prototype.processResource = function processResource(manifest, ctx, charset, urlReplacer) {
        var lines = manifest.split('\n');

        for (var i = 0; i < lines.length; i++) {
            var line = lines[i].trim();

            if (line && line !== 'CACHE MANIFEST' && line !== 'NETWORK:' && line !== 'FALLBACK:' && line !== 'CACHE:' && line[0] !== '#' && line !== '*') {

                var isFallbackItem = line.indexOf(' ') !== -1;

                if (isFallbackItem) {
                    var urls = line.split(' ');

                    lines[i] = urlReplacer(urls[0]) + ' ' + urlReplacer(urls[1]);
                } else lines[i] = urlReplacer(line);
            }
        }

        return lines.join('\n');
    };

    ManifestProcessor.prototype.shouldProcessResource = function shouldProcessResource(ctx) {
        return ctx.contentInfo.isManifest;
    };

    return ManifestProcessor;
}(_resourceProcessorBase2.default);

exports.default = new ManifestProcessor();
module.exports = exports['default'];