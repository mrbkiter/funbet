'use strict';

exports.__esModule = true;
exports.process = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var process = exports.process = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(ctx) {
        var processors, body, contentInfo, encoding, charset, decoded, i, urlReplacer, processed;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        processors = [_page2.default, _manifest2.default, _script2.default, _stylesheet2.default];
                        body = ctx.destResBody;
                        contentInfo = ctx.contentInfo;
                        encoding = contentInfo.encoding;
                        charset = contentInfo.charset;
                        _context.next = 7;
                        return (0, _encoding.decodeContent)(body, encoding, charset);

                    case 7:
                        decoded = _context.sent;
                        i = 0;

                    case 9:
                        if (!(i < processors.length)) {
                            _context.next = 23;
                            break;
                        }

                        if (!processors[i].shouldProcessResource(ctx)) {
                            _context.next = 20;
                            break;
                        }

                        urlReplacer = getResourceUrlReplacer(ctx);
                        processed = processors[i].processResource(decoded, ctx, charset, urlReplacer);

                        if (!(processed === _page2.default.RESTART_PROCESSING)) {
                            _context.next = 17;
                            break;
                        }

                        _context.next = 16;
                        return process(ctx);

                    case 16:
                        return _context.abrupt('return', _context.sent);

                    case 17:
                        _context.next = 19;
                        return (0, _encoding.encodeContent)(processed, encoding, charset);

                    case 19:
                        return _context.abrupt('return', _context.sent);

                    case 20:
                        i++;
                        _context.next = 9;
                        break;

                    case 23:
                        return _context.abrupt('return', body);

                    case 24:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function process(_x) {
        return _ref.apply(this, arguments);
    };
}();

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

var _page = require('./page');

var _page2 = _interopRequireDefault(_page);

var _manifest = require('./manifest');

var _manifest2 = _interopRequireDefault(_manifest);

var _script = require('./script');

var _script2 = _interopRequireDefault(_script);

var _stylesheet = require('./stylesheet');

var _stylesheet2 = _interopRequireDefault(_stylesheet);

var _url3 = require('../../utils/url');

var urlUtil = _interopRequireWildcard(_url3);

var _encoding = require('../encoding');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getResourceUrlReplacer(ctx) {
    return function (resourceUrl, resourceType, charsetAttrValue, baseUrl) {
        if (!urlUtil.isSupportedProtocol(resourceUrl) && !urlUtil.isSpecialPage(resourceUrl)) return resourceUrl;

        // NOTE: Resolves base URLs without a protocol ('//google.com/path' for example).
        baseUrl = baseUrl ? _url2.default.resolve(ctx.dest.url, baseUrl) : '';
        resourceUrl = urlUtil.prepareUrl(resourceUrl);

        var resolvedUrl = _url2.default.resolve(baseUrl || ctx.dest.url, resourceUrl);
        var isScript = urlUtil.parseResourceType(resourceType).isScript;
        var charsetStr = charsetAttrValue || isScript && ctx.contentInfo.charset.get();

        resolvedUrl = urlUtil.ensureTrailingSlash(resourceUrl, resolvedUrl);

        if (!urlUtil.isValidUrl(resolvedUrl)) return resolvedUrl;

        return ctx.toProxyUrl(resolvedUrl, false, resourceType, charsetStr);
    };
}