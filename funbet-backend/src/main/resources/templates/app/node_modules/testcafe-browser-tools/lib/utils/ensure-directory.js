'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator').default;

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default').default;

exports.__esModule = true;

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _promisify = require('./promisify');

var _promisify2 = _interopRequireDefault(_promisify);

var stat = _promisify2.default(_fs2.default.stat);
var mkdir = _promisify2.default(_fs2.default.mkdir);

function createDirectory(directoryPath) {
    return _regeneratorRuntime.async(function createDirectory$(context$1$0) {
        while (1) switch (context$1$0.prev = context$1$0.next) {
            case 0:
                context$1$0.prev = 0;
                context$1$0.next = 3;
                return _regeneratorRuntime.awrap(mkdir(directoryPath));

            case 3:
                return context$1$0.abrupt('return', true);

            case 6:
                context$1$0.prev = 6;
                context$1$0.t0 = context$1$0['catch'](0);
                return context$1$0.abrupt('return', false);

            case 9:
            case 'end':
                return context$1$0.stop();
        }
    }, null, this, [[0, 6]]);
}

exports.default = function callee$0$0(fileName) {
    var directoryPath, stats;
    return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
        while (1) switch (context$1$0.prev = context$1$0.next) {
            case 0:
                directoryPath = _path.dirname(fileName);
                context$1$0.prev = 1;
                context$1$0.next = 4;
                return _regeneratorRuntime.awrap(stat(directoryPath));

            case 4:
                stats = context$1$0.sent;
                return context$1$0.abrupt('return', stats.isDirectory());

            case 8:
                context$1$0.prev = 8;
                context$1$0.t0 = context$1$0['catch'](1);

                if (!(context$1$0.t0.code === 'ENOENT')) {
                    context$1$0.next = 12;
                    break;
                }

                return context$1$0.abrupt('return', createDirectory(directoryPath));

            case 12:
                return context$1$0.abrupt('return', false);

            case 13:
            case 'end':
                return context$1$0.stop();
        }
    }, null, this, [[1, 8]]);
};

module.exports = exports.default;